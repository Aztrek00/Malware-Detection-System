import os   
import tkinter as tk
from tkinter import messagebox, filedialog
import threading
import requests
import time

# Set your VirusTotal API key
API_KEY = "e49a48754775054baccc01e98e231f67ecf2c77c1ae6ddb8479923087bb4713d"


def scan_for_malware(file_path):
    # Send the file to VirusTotal for analysis
    url = "https://www.virustotal.com/vtapi/v2/file/scan"
    params = {"e49a48754775054baccc01e98e231f67ecf2c77c1ae6ddb8479923087bb4713d": API_KEY}
    files = {"file": open(file_path, "rb")}
    response = requests.post(url, params=params, files=files)
    if response.status_code == 200:
        json_response = response.json()
        resource = json_response["scan_id"]
        # Wait for the analysis to complete
        url = f"https://www.virustotal.com/vtapi/v2/file/report"
        params = {"e49a48754775054baccc01e98e231f67ecf2c77c1ae6ddb8479923087bb4713d": API_KEY, "resource": resource}
        while True:
            response = requests.get(url, params=params)
            if response.status_code == 200:
                json_response = response.json()
                if json_response["response_code"] == 1:
                    if "positives" in json_response["scans"]:
                        if json_response["scans"]["positives"] > 0:
                            return True
                    break
            time.sleep(30)  # wait 30 seconds before retrying



def scan_system_for_malware():
    def scan_files():
        for root, dirs, files in os.walk('/'):
            for file in files:
                file_path = os.path.join(root, file)
                malware_detected = scan_for_malware(file_path)
                if malware_detected:
                    print("Malware Detected in:", file_path)
                    messagebox.showinfo('Malware Detected', f'Malware Detected in: {file_path}')
                    return  # Stop scanning after the first malware is found
        messagebox.showinfo('Scan Complete', 'System scan for malware is complete.')

    scan_thread = threading.Thread(target=scan_files, daemon=True)
    scan_thread.start()
    messagebox.showinfo('Scanning Started', 'System scan for malware has started. This may take some time.')


def scan_specific_file():
    choice = messagebox.askquestion("Scan File or Folder", "Do you want to scan a file?")
    if choice == 'yes':
        file_path = filedialog.askopenfilename()
        if file_path:
            malware_detected = scan_for_malware(file_path)
            if malware_detected:
                messagebox.showinfo('Malware Detected', f'Malware Detected in: {file_path}')
            else:
                messagebox.showinfo('No Malware Detected', f'No malware detected in: {file_path}')
    elif choice == 'no':
        folder_path = filedialog.askdirectory()
        if folder_path:
            def scan_folder():
                total_files = sum([len(files) for _, _, files in os.walk(folder_path)])
                files_scanned = 0
                for root, dirs, files in os.walk(folder_path):
                    for file in files:
                        file_path = os.path.join(root, file)
                        malware_detected = scan_for_malware(file_path)
                        if malware_detected:
                            print("Malware Detected in:", file_path)
                        else:
                            print("No Malware detected in:", file_path)
                        files_scanned += 1
                        if files_scanned == total_files:
                            messagebox.showinfo('Scan Complete', 'Scanning of folder is complete.')

            scan_thread = threading.Thread(target=scan_folder, daemon=True)
            scan_thread.start()


class MalwareScannerApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Malware Scanner")
        self.root.geometry("400x200")
        scan_system_button = tk.Button(root, text='Scan System', command=scan_system_for_malware, bg='darkblue',
                                       fg='white', font=('Times New Roman', 12, 'bold'))
        scan_system_button.pack(pady=20)
        scan_file_button = tk.Button(root, text='Scan Specific File or Folder', command=scan_specific_file,
                                     bg='darkgreen', fg='white', font=('Times New Roman', 12, 'bold'))
        scan_file_button.pack(pady=20)


if __name__ == "__main__":
    root = tk.Tk()
    app = MalwareScannerApp(root)
    root.mainloop()